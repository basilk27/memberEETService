{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/ca-doc-reports/ca-doc-reports.component.css","webpack:///./src/app/ca-doc-reports/ca-doc-reports.component.html","webpack:///./src/app/ca-doc-reports/ca-doc-reports.component.ts","webpack:///./src/app/create-employer-profile/create-employer-profile.component.css","webpack:///./src/app/create-employer-profile/create-employer-profile.component.html","webpack:///./src/app/create-employer-profile/create-employer-profile.component.ts","webpack:///./src/app/eet-errors/eet-errors.component.css","webpack:///./src/app/eet-errors/eet-errors.component.html","webpack:///./src/app/eet-errors/eet-errors.component.ts","webpack:///./src/app/eet-main/eet-main.component.css","webpack:///./src/app/eet-main/eet-main.component.html","webpack:///./src/app/eet-main/eet-main.component.ts","webpack:///./src/app/group-mapping/group-mapping.component.css","webpack:///./src/app/group-mapping/group-mapping.component.html","webpack:///./src/app/group-mapping/group-mapping.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/job-schedule/job-schedule.component.css","webpack:///./src/app/job-schedule/job-schedule.component.html","webpack:///./src/app/job-schedule/job-schedule.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/model/login-status.ts","webpack:///./src/app/model/login.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/search-status/search-status.component.css","webpack:///./src/app/search-status/search-status.component.html","webpack:///./src/app/search-status/search-status.component.ts","webpack:///./src/app/service/login/login.service.ts","webpack:///./src/app/update-employer-contacts/update-employer-contacts.component.css","webpack:///./src/app/update-employer-contacts/update-employer-contacts.component.html","webpack:///./src/app/update-employer-contacts/update-employer-contacts.component.ts","webpack:///./src/app/update-employer-profile/update-employer-profile.component.css","webpack:///./src/app/update-employer-profile/update-employer-profile.component.html","webpack:///./src/app/update-employer-profile/update-employer-profile.component.ts","webpack:///./src/app/view-employer-profile/view-employer-profile.component.css","webpack:///./src/app/view-employer-profile/view-employer-profile.component.html","webpack:///./src/app/view-employer-profile/view-employer-profile.component.ts","webpack:///./src/app/view-error-message/view-error-message.component.css","webpack:///./src/app/view-error-message/view-error-message.component.html","webpack:///./src/app/view-error-message/view-error-message.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAC2B;AACzB;AACQ;AACiB;AACF;AACT;AACM;AACG;AAC1B;AAEtD,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE;IACpD,EAAE,IAAI,EAAE,MAAM,EAAQ,SAAS,EAAE,mEAAa,EAAE;IAChD,EAAE,IAAI,EAAE,OAAO,EAAO,SAAS,EAAE,qEAAc,EAAE;IACjD,EAAE,IAAI,EAAE,MAAM,EAAQ,SAAS,EAAE,6EAAgB,EAAE;IACnD,EAAE,IAAI,EAAE,QAAQ,EAAM,SAAS,EAAE,8FAAqB,EAAE;IACxD,EAAE,IAAI,EAAE,QAAQ,EAAM,SAAS,EAAG,4FAAqB,EAAE;IACzD,EAAE,IAAI,EAAE,WAAW,EAAG,SAAS,EAAG,mFAAkB,EAAE;IACtD,EAAE,IAAI,EAAE,UAAU,EAAI,SAAS,EAAG,yFAAoB,EAAE;IACxD,EAAE,IAAI,EAAE,SAAS,EAAK,SAAS,EAAG,4FAAqB,EAAE;IACzD,EAAE,IAAI,EAAE,IAAI,EAAU,SAAS,EAAE,8FAAqB,EAAE;CACzD,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AC7B7B,+BAA+B,mBAAmB,GAAG,gBAAgB,oBAAoB,uBAAuB,sBAAsB,qBAAqB,GAAG,G;;;;;;;;;;;ACA9J,yrC;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACA;AAClD,2EAA2E;AAC3E,kDAAkD;AAClD,qCAAqC;AACrC,4CAA4C;AAO5C;IAIA,2BAA2B;IAC3B,sCAAsC;IACtC,2BAA2B;IAE3B,0FAA0F;IACxF,sBAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAPzC,UAAK,GAAG,aAAa,CAAC;QAQpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;IAEF,+BAAQ,GAAR;QACF,oDAAoD;QAChD,mBAAmB;QACvB,wEAAwE;QACxE,6DAA6D;QAC7D,4DAA4D;QAE5D,gCAAgC;QAC5B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAE,CAAC,SAAS,CAAE,cAAI,IAAK,CAAC,CAAC,CAAC;IAC9D,CAAC;IAED,mCAAY,GAAZ;QACE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC5B,CAAC;IA1BS,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAUgC,+DAAU;OAT/B,YAAY,CA2BxB;IAAD,mBAAC;CAAA;AA3BwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZiC;AACjB;AACsC;AAC1B;AACG;AAEA;AACT;AACa;AACsB;AACzB;AACQ;AACiB;AACF;AACT;AACM;AACG;AAC1B;AACuD;AACA;AACN;AACS;AAClB;AA+B9F;IAAA;IAAyB,CAAC;IAAb,SAAS;QA7BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,8FAAqB;gBACrB,qEAAc;gBACd,8EAAgB;gBAChB,+FAAqB;gBACrB,6FAAqB;gBACrB,oFAAkB;gBAClB,0FAAoB;gBACpB,6FAAqB;gBACrB,mEAAa;gBACb,0HAA8B;gBAC9B,0HAA8B;gBAC9B,oHAA4B;gBAC5B,6HAA+B;gBAC/B,2GAAyB;aAC1B;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,wEAAc;gBACd,4FAAuB;gBACvB,kEAAmB;gBACnB,qEAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACrDtB,mB;;;;;;;;;;;ACAA,wU;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;ACPlC,mB;;;;;;;;;;;ACAA,4JAA4J,4hCAA4hC,YAAY,ub;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlpC;AACkB;AAC3B;AAOzC;IAOE,wCAAqB,MAAc,EACd,WAAwB;QADxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAJ7C,gBAAW,GAAG,CAAC,gBAAgB,EAAE,aAAa,EAAE,eAAe;YAC7D,MAAM,EAAE,cAAc,EAAE,aAAa,EAAE,gBAAgB,CAAC,CAAC;IAGT,CAAC;IAEnD,iDAAQ,GAAR;QACE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjD,QAAQ,EAAE,CAAE,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YACrC,UAAU,EAAE,CAAE,EAAE,CAAE;YAClB,YAAY,EAAE,CAAE,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;SAC1C,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,wDAAY;aAAhB;YACE,OAAO,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAE,UAAU,CAAE,CAAC;QACrD,CAAC;;;OAAA;IAED,sBAAI,0DAAc;aAAlB;YACE,OAAO,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAE,YAAY,CAAE,CAAC;QACvD,CAAC;;;OAAA;IAED,sBAAI,4DAAgB;aAApB;YACE,OAAO,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAE,cAAc,CAAE,CAAC;QACzD,CAAC;;;OAAA;IAED,iDAAQ,GAAR;QACE,IAAK,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAG;YACvC,OAAO,CAAC,GAAG,CAAE,iBAAiB,CAAE,CAAC;YACjC,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAE,iBAAiB,CAAE,CAAC;IACnC,CAAC;IArCU,8BAA8B;QAL1C,+DAAS,CAAC;YACT,QAAQ,EAAE,6BAA6B;;;SAGxC,CAAC;yCAQ6B,sDAAM;YACD,0DAAW;OARlC,8BAA8B,CAsC1C;IAAD,qCAAC;CAAA;AAtC0C;;;;;;;;;;;;ACT3C,mB;;;;;;;;;;;ACAA,4zC;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAET;AAOzC;IAIE,4BAAqB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;QAClC,IAAI,CAAC,UAAU,GAAI;YACjB,YAAY,EAAE,IAAI;YAClB,YAAY,EAAE,IAAI;YAClB,cAAc,EAAE,KAAK;YACrB,cAAc,EAAE,KAAK;YACrB,iBAAiB,EAAE,KAAK;YACxB,gBAAgB,EAAE,KAAK;YACvB,eAAe,EAAE,KAAK;SACvB,CAAC;IAEJ,CAAC;IAED,qCAAQ,GAAR;IACA,CAAC;IAED,uCAAU,GAAV;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,yCAAY,GAAZ;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,yCAAY,GAAZ;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAE,CAAE,SAAS,CAAE,CAAE,CAAC;IACzC,CAAC;IAED,4CAAe,GAAf;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAE,CAAE,SAAS,CAAE,CAAE,CAAC;IACzC,CAAC;IAED,2CAAc,GAAd;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAE,CAAE,WAAW,CAAE,CAAE,CAAC;IAC3C,CAAC;IAED,0CAAa,GAAb;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACtC,CAAC;IA1CU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAK8B,sDAAM;OAJzB,kBAAkB,CA4C9B;IAAD,yBAAC;CAAA;AA5C8B;;;;;;;;;;;;ACT/B,kCAAkC,eAAe,oBAAoB,GAAG,2BAA2B,kBAAkB,qBAAqB,GAAG,G;;;;;;;;;;;ACA7I,i3E;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAGT;AAOzC;IAIE,0BAAqB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;QAClC,IAAI,CAAC,UAAU,GAAI;YACjB,YAAY,EAAE,IAAI;YAClB,YAAY,EAAE,KAAK;YACnB,cAAc,EAAE,IAAI;YACpB,cAAc,EAAE,IAAI;YACpB,iBAAiB,EAAE,IAAI;YACvB,gBAAgB,EAAE,IAAI;YACtB,eAAe,EAAE,IAAI;SACtB,CAAC;IACJ,CAAC;IAED,mCAAQ,GAAR;IACA,CAAC;IAED,qCAAU,GAAV;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,uCAAY,GAAZ;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,uCAAY,GAAZ;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAE,CAAE,SAAS,CAAE,CAAE,CAAC;IACzC,CAAC;IAED,0CAAe,GAAf;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAE,CAAE,YAAY,CAAE,CAAE,CAAC;IAC5C,CAAC;IAED,yCAAc,GAAd;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAE,CAAE,WAAW,CAAE,CAAE,CAAC;IAC3C,CAAC;IAED,wCAAa,GAAb;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACtC,CAAC;IAzCU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAK8B,sDAAM;OAJzB,gBAAgB,CA0C5B;IAAD,uBAAC;CAAA;AA1C4B;;;;;;;;;;;;ACV7B,mB;;;;;;;;;;;ACAA,wU;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;ACPlC,mB;;;;;;;;;;;ACAA,iO;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;ACP1B,mB;;;;;;;;;;;ACAA,sU;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,uCAAQ,GAAR;IACA,CAAC;IALU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;;OACW,oBAAoB,CAOhC;IAAD,2BAAC;CAAA;AAPgC;;;;;;;;;;;;ACPjC,+BAA+B,iBAAiB,qBAAqB,GAAG,qBAAqB,oBAAoB,GAAG,iBAAiB,qBAAqB,qBAAqB,gBAAgB,GAAG,uBAAuB,gBAAgB,GAAG,G;;;;;;;;;;;ACA5O,wsC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACT;AAIV;AAC+B;AACvB;AACa;AASpD;IAOE,wBAAqB,MAAc,EACd,YAA0B,EAC1B,WAAwB;QAFxB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QAC3C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAED,iCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,+DAAW,CAAE,KAAK,EAAE,EAAE,CAAC,CAAC;QAE/C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,QAAQ,EAAE,CAAE,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YACrC,QAAQ,EAAE,CAAE,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;SACtC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,wCAAY;aAAhB;YACE,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAE,UAAU,CAAE,CAAC;QAC1C,CAAC;;;OAAA;IAED,sBAAI,wCAAY;aAAhB;YACE,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAE,UAAU,CAAE,CAAC;QAC1C,CAAC;;;OAAA;IAED,iCAAQ,GAAR;QAAA,iBAkCC;QAjCC,IAAK,IAAI,CAAC,SAAS,CAAC,OAAO,EAAG;YAC5B,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC/B,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAE/B,IAAM,UAAU,GAAG,IAAI,kDAAK,CAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,EACtC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAE,UAAU,CAAE,CAAC,KAAK,CAAC,CAAC;QAExE,6EAA6E;QAC7E;;;;;;;;;UASE;QAEE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAE,UAAU,CAAE;aAClC,SAAS,CAAE,UAAC,GAAgB,IAAO,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC,EAC3D,UAAE,GAAgB,IAAQ,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC,CAAE,CAAC;QAE9D,EAAE;QACF,yCAAyC;QACzC,mDAAmD;QACnD,eAAe;QACf,OAAO;QAEH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IACjC,CAAC;IAjEU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAQ6B,sDAAM;YACA,yEAAY;YACb,0DAAW;OATlC,cAAc,CA+E1B;IAAD,qBAAC;CAAA;AA/E0B;;;;;;;;;;;;;;;;;;;;;;;;;ACjBc;AACM;AACS;AAa7B;AAmC3B;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAjC1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,iEAAe;gBACf,kEAAgB;gBAChB,+DAAa;gBACb,+DAAa;gBACb,iEAAe;gBACf,mEAAiB;gBACjB,gEAAc;gBACd,gEAAc;gBACd,+DAAa;gBACb,qEAAgB;gBAChB,+DAAa;gBACb,iEAAe;aAChB;YACD,OAAO,EAAE;gBACP,4DAAY;gBACZ,iEAAe;gBACf,kEAAgB;gBAChB,+DAAa;gBACb,+DAAa;gBACb,iEAAe;gBACf,mEAAiB;gBACjB,gEAAc;gBACd,gEAAc;gBACd,+DAAa;gBACb,qEAAgB;gBAChB,+DAAa;gBACb,iEAAe;aAChB;YACD,YAAY,EAAE,EAAE;SACjB,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;;AClD3B;AAAA;AAAA;IACE,qBACS,SAAkB,EAClB,OAAe;QADf,cAAS,GAAT,SAAS,CAAS;QAClB,YAAO,GAAP,OAAO,CAAQ;IACpB,CAAC;IACP,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACLD;AAAA;AAAA;IACE,eACS,OAAe,EACf,QAAgB;QADhB,YAAO,GAAP,OAAO,CAAQ;QACf,aAAQ,GAAR,QAAQ,CAAQ;IACpB,CAAC;IACR,YAAC;AAAD,CAAC;;;;;;;;;;;;;ACLD,mB;;;;;;;;;;;ACAA,0a;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;ACPlC,mB;;;;;;;;;;;ACAA,wU;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;;;;;;;;;;;;;;;ACPS;AACoB;AAS/D;IACE,sBAAqB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAK,CAAC;IAEjD,4BAAK,GAAL,UAAO,UAAiB;QAEtB,IAAM,WAAW,GAAG,IAAI,gEAAW,EAAE;aAClC,GAAG,CAAE,cAAc,EAAE,kBAAkB,CAAE;aACzC,GAAG,CAAE,eAAe,EAAE,UAAU,CAAE,CAAC;QAEtC,IAAM,OAAO,GAAG;YACd,OAAO,EAAE,WAAW;SACrB,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAc,QAAQ,EAAE,UAAU,EAAE,OAAO,CAAE,CAAC;IAC3E,CAAC;IAdU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAEiC,+DAAU;OADhC,YAAY,CAexB;IAAD,mBAAC;CAAA;AAfwB;;;;;;;;;;;;ACVzB,mB;;;;;;;;;;;ACAA,uIAAuI,+/BAA+/B,YAAY,2a;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhmC;AACkB;AAC3B;AAOzC;IAOE,yCAAqB,MAAc,EACd,WAAwB;QADxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAJ7C,gBAAW,GAAG,CAAC,gBAAgB,EAAE,aAAa,EAAE,eAAe;YAC7D,MAAM,EAAE,cAAc,EAAE,aAAa,EAAE,gBAAgB,CAAC,CAAC;IAGT,CAAC;IAEnD,kDAAQ,GAAR;QACE,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxD,QAAQ,EAAE,CAAE,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YACrC,UAAU,EAAE,CAAE,EAAE,CAAE;YAClB,YAAY,EAAE,CAAE,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;SAC1C,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,yDAAY;aAAhB;YACE,OAAO,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAE,UAAU,CAAE,CAAC;QAC5D,CAAC;;;OAAA;IAED,sBAAI,2DAAc;aAAlB;YACE,OAAO,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAE,YAAY,CAAE,CAAC;QAC9D,CAAC;;;OAAA;IAED,sBAAI,6DAAgB;aAApB;YACE,OAAO,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAE,cAAc,CAAE,CAAC;QAChE,CAAC;;;OAAA;IAED,kDAAQ,GAAR;QACE,IAAK,IAAI,CAAC,2BAA2B,CAAC,OAAO,EAAG;YAC9C,OAAO,CAAC,GAAG,CAAE,iBAAiB,CAAE,CAAC;YACjC,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAE,iBAAiB,CAAE,CAAC;IACnC,CAAC;IArCU,+BAA+B;QAL3C,+DAAS,CAAC;YACT,QAAQ,EAAE,8BAA8B;;;SAGzC,CAAC;yCAQ6B,sDAAM;YACD,0DAAW;OARlC,+BAA+B,CAsC3C;IAAD,sCAAC;CAAA;AAtC2C;;;;;;;;;;;;ACT5C,mB;;;;;;;;;;;ACAA,4JAA4J,4hCAA4hC,YAAY,ub;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlpC;AACkB;AAC3B;AAOzC;IAOE,wCAAqB,MAAc,EACd,WAAwB;QADxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAJ7C,gBAAW,GAAG,CAAC,gBAAgB,EAAE,aAAa,EAAE,eAAe;YAC7D,MAAM,EAAE,cAAc,EAAE,aAAa,EAAE,gBAAgB,CAAC,CAAC;IAGT,CAAC;IAEnD,iDAAQ,GAAR;QACE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjD,QAAQ,EAAE,CAAE,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YACrC,UAAU,EAAE,CAAE,EAAE,CAAE;YAClB,YAAY,EAAE,CAAE,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;SAC1C,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,wDAAY;aAAhB;YACE,OAAO,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAE,UAAU,CAAE,CAAC;QACrD,CAAC;;;OAAA;IAED,sBAAI,0DAAc;aAAlB;YACE,OAAO,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAE,YAAY,CAAE,CAAC;QACvD,CAAC;;;OAAA;IAED,sBAAI,4DAAgB;aAApB;YACE,OAAO,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAE,cAAc,CAAE,CAAC;QACzD,CAAC;;;OAAA;IAED,iDAAQ,GAAR;QACE,IAAK,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAG;YACvC,OAAO,CAAC,GAAG,CAAE,iBAAiB,CAAE,CAAC;YACjC,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAE,iBAAiB,CAAE,CAAC;IACnC,CAAC;IArCU,8BAA8B;QAL1C,+DAAS,CAAC;YACT,QAAQ,EAAE,6BAA6B;;;SAGxC,CAAC;yCAQ6B,sDAAM;YACD,0DAAW;OARlC,8BAA8B,CAsC1C;IAAD,qCAAC;CAAA;AAtC0C;;;;;;;;;;;;ACT3C,8CAA8C,iBAAiB,mBAAmB,qBAAqB,GAAG,4BAA4B,qBAAqB,qBAAqB,gBAAgB,qBAAqB,GAAG,kCAAkC,eAAe,GAAG,O;;;;;;;;;;;ACA5Q,mKAAmK,0hCAA0hC,YAAY,ub;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvpC;AAGN;AACH;AAOzC;IAOE,sCAAqB,MAAc,EACxB,WAAwB;QADd,WAAM,GAAN,MAAM,CAAQ;QACxB,gBAAW,GAAX,WAAW,CAAa;QAJnC,gBAAW,GAAG,CAAC,gBAAgB,EAAE,aAAa,EAAE,eAAe;YAChD,MAAM,EAAE,cAAc,EAAE,aAAa,EAAE,gBAAgB,CAAC,CAAC;IAGhC,CAAC;IAEzC,+CAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC/C,QAAQ,EAAE,CAAE,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YACrC,UAAU,EAAE,CAAE,EAAE,CAAE;YAClB,YAAY,EAAE,CAAE,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;SAC1C,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,sDAAY;aAAhB;YACE,OAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAE,UAAU,CAAE,CAAC;QACnD,CAAC;;;OAAA;IAED,sBAAI,wDAAc;aAAlB;YACE,OAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAE,YAAY,CAAE,CAAC;QACrD,CAAC;;;OAAA;IAED,sBAAI,0DAAgB;aAApB;YACE,OAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAE,cAAc,CAAE,CAAC;QACvD,CAAC;;;OAAA;IAED,+CAAQ,GAAR;QACE,IAAK,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAG;YACrC,OAAO,CAAC,GAAG,CAAE,iBAAiB,CAAE,CAAC;YACjC,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAE,iBAAiB,CAAE,CAAC;IACnC,CAAC;IArCU,4BAA4B;QALxC,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;;;SAGtC,CAAC;yCAQ6B,sDAAM;YACX,0DAAW;OARxB,4BAA4B,CAsCxC;IAAD,mCAAC;CAAA;AAtCwC;;;;;;;;;;;;ACXzC,mB;;;;;;;;;;;ACAA,yJAAyJ,s0BAAs0B,YAAY,shBAAshB,YAAY,ub;;;;;;;;;;;;;;;;;;;;;;;;;;ACA39C;AACkB;AAC3B;AAOzC;IASE,mCAAqB,MAAc,EACd,WAAwB;QADxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAN7C,gBAAW,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QAE7C,gBAAW,GAAG,CAAC,gBAAgB,EAAE,aAAa,EAAE,eAAe;YAC7D,MAAM,EAAE,cAAc,EAAE,aAAa,EAAE,gBAAgB,CAAC,CAAC;IAGT,CAAC;IAEnD,4CAAQ,GAAR;QACE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjD,QAAQ,EAAE,CAAE,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YACrC,UAAU,EAAE,CAAE,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YACvC,YAAY,EAAE,CAAE,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;SAC1C,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,mDAAY;aAAhB;YACE,OAAO,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAE,UAAU,CAAE,CAAC;QACrD,CAAC;;;OAAA;IAED,sBAAI,qDAAc;aAAlB;YACE,OAAO,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAE,YAAY,CAAE,CAAC;QACvD,CAAC;;;OAAA;IAED,sBAAI,uDAAgB;aAApB;YACE,OAAO,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAE,cAAc,CAAE,CAAC;QACzD,CAAC;;;OAAA;IAED,4CAAQ,GAAR;QACE,IAAK,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAG;YACvC,OAAO,CAAC,GAAG,CAAE,iBAAiB,CAAE,CAAC;YACjC,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAE,iBAAiB,CAAE,CAAC;IACnC,CAAC;IAvCU,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;;;SAGnC,CAAC;yCAU6B,sDAAM;YACD,0DAAW;OAVlC,yBAAyB,CAwCrC;IAAD,gCAAC;CAAA;AAxCqC;;;;;;;;;;;;;ACTtC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { LoginComponent } from './login/login.component';\nimport { EetMainComponent } from './eet-main/eet-main.component';\nimport { CaDocReportsComponent } from './ca-doc-reports/ca-doc-reports.component';\nimport { SearchStatusComponent } from './search-status/search-status.component';\nimport { EetErrorsComponent } from './eet-errors/eet-errors.component';\nimport { JobScheduleComponent } from './job-schedule/job-schedule.component';\nimport { GroupMappingComponent } from './group-mapping/group-mapping.component';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'home',       component: HomeComponent },\n  { path: 'login',      component: LoginComponent },\n  { path: 'main',       component: EetMainComponent },\n  { path: 'cadocs',     component: CaDocReportsComponent },\n  { path: 'search',     component:  SearchStatusComponent },\n  { path: 'eeterrors',  component:  EetErrorsComponent },\n  { path: 'schedule',   component:  JobScheduleComponent },\n  { path: 'mapping',    component:  GroupMappingComponent },\n  { path: '**',         component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".fill-space {\\n  flex: 1 1 auto;\\n}\\n\\n.no-margin {\\n  margin-top: 0px;\\n  margin-bottom: 0px;\\n  margin-right: 0px;\\n  margin-left: 0px;\\n}\\n\"","module.exports = \"<div>\\n  <div>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <div fxFlexAlign=\\\"auto\\\" class=\\\"mat-h1\\\">\\n        <span >Membership Electronic Eligibility Transfer</span>\\n      </div>\\n      <span class=\\\"fill-space\\\"></span>\\n      <div *ngIf=\\\"loginButtonOn\\\">\\n        <span>\\n            <a mat-raised-button routerLink='/login'\\n               class='mat-button'\\n               (click)='onLoginClick()'>Login</a>\\n        </span>\\n      </div>\\n    </mat-toolbar>\\n  </div>\\n<!--\\n  <div *ngIf='zManuState.mainManuFlag'>\\n    <mat-toolbar color=\\\"accent\\\">\\n      <a mat-mat-raised-button  routerLink=\\\"/main\\\" class='mat-button'>EET Main</a>\\n      <a mat-mat-raised-button  routerLink=\\\"/cadocs\\\" class='mat-button'>View CA-Doc</a>\\n      <a mat-mat-raised-button  routerLink=\\\"/search\\\" class='mat-button'>Search Status</a>\\n      <a mat-mat-raised-button  routerLink=\\\"/eeterrors\\\" class='mat-button'>EET Errors</a>\\n      <a mat-mat-raised-button  routerLink=\\\"/schedule\\\" class='mat-button'>Job Schedule</a>\\n      <a mat-mat-raised-button  routerLink=\\\"/mapping\\\" class='mat-button'>Group Mapping</a>\\n    </mat-toolbar>\\n  </div>\\n-->\\n</div>\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n// import { MeanuStateService } from './service/state/meanu-state.service';\n// import { ManuState } from './model/manu-state';\n// import { Observable } from 'rxjs';\n// import { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n   title = 'ngMemberEET';\n   loginButtonOn: boolean;\n//   mainManuFlag: boolean;\n//   manuState: Observable<ManuState>;\n//   zManuState: ManuState;\n\n//  constructor(private httpClient: HttpClient, private meanuService: MeanuStateService) {\n  constructor(private httpClient: HttpClient ) {\n     this.loginButtonOn = true;\n   }\n\n  ngOnInit() {\n//    this.manuState = this.meanuService.getState();\n    // this.loginFlag =\n//    this.manuState.subscribe( aManu => { this.zManuState = aManu; } );\n//    console.log('BBBBB  ' + this.zManuState.loginButtonOn);\n//    console.log('NNNNN  ' + this.zManuState.mainManuFlag);\n\n//    this.mainManuFlag = false;\n    this.httpClient.get('/v1/api/home' ).subscribe( data => {});\n  }\n\n  onLoginClick(): void {\n    this.loginButtonOn = false;\n   }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './material/material.module';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { LoginComponent } from './login/login.component';\nimport { EetMainComponent } from './eet-main/eet-main.component';\nimport { CaDocReportsComponent } from './ca-doc-reports/ca-doc-reports.component';\nimport { SearchStatusComponent } from './search-status/search-status.component';\nimport { EetErrorsComponent } from './eet-errors/eet-errors.component';\nimport { JobScheduleComponent } from './job-schedule/job-schedule.component';\nimport { GroupMappingComponent } from './group-mapping/group-mapping.component';\nimport { HomeComponent } from './home/home.component';\nimport { CreateEmployerProfileComponent } from './create-employer-profile/create-employer-profile.component';\nimport { UpdateEmployerProfileComponent } from './update-employer-profile/update-employer-profile.component';\nimport { ViewEmployerProfileComponent } from './view-employer-profile/view-employer-profile.component';\nimport { UpdateEmployerContactsComponent } from './update-employer-contacts/update-employer-contacts.component';\nimport { ViewErrorMessageComponent } from './view-error-message/view-error-message.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageNotFoundComponent,\n    LoginComponent,\n    EetMainComponent,\n    CaDocReportsComponent,\n    SearchStatusComponent,\n    EetErrorsComponent,\n    JobScheduleComponent,\n    GroupMappingComponent,\n    HomeComponent,\n    CreateEmployerProfileComponent,\n    UpdateEmployerProfileComponent,\n    ViewEmployerProfileComponent,\n    UpdateEmployerContactsComponent,\n    ViewErrorMessageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MaterialModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n  <mat-card>\\n    <mat-card-header>\\n      <mat-card-title class=\\\"mat-display-2\\\">CA Doc Report</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <p>ca-doc-report display info.</p>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ca-doc-reports',\n  templateUrl: './ca-doc-reports.component.html',\n  styleUrls: ['./ca-doc-reports.component.css']\n})\nexport class CaDocReportsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"tab-emp-profile-card\\\">\\n  <mat-card-header>\\n    <mat-card-title class=\\\"mat-h1\\\">Create Employer Profile information:&nbsp;</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <form class=\\\"tab-emp-profile-form\\\" [formGroup]=\\\"createEmpProfileForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <table class=\\\"tab-emp-profile-full-width\\\" cellspacing=\\\"0\\\">\\n        <mat-form-field class=\\\"tab-emp-profile-full-width\\\">\\n          <input type=\\\"text\\\" matInput placeholder=\\\"Client ID\\\" formControlName=\\\"clientId\\\">\\n          <mat-error\\n            *ngIf=\\\"clientIdCtrl.hasError('required')\\\">Client ID is <strong>required</strong></mat-error>\\n        </mat-form-field>\\n        <div>\\n          <mat-form-field class=\\\"tab-emp-profile-full-width\\\">\\n            <input type=\\\"text\\\" matInput placeholder=\\\"Case Number\\\" formControlName=\\\"caseNumber\\\">\\n          </mat-form-field>\\n        </div>\\n        <mat-form-field class=\\\"tab-emp-profile-full-width\\\">\\n          <mat-select placeholder=\\\"Select Source Transaction\\\" formControlName=\\\"sourceSystem\\\">\\n            <mat-option *ngFor=\\\"let itemSource of sourceTypes\\\" [value]=\\\"itemSource\\\">\\n              {{itemSource}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error\\n            *ngIf=\\\"sourceSystemCtrl.hasError('required')\\\">A Source Transaction is <strong>required</strong>\\n          </mat-error>\\n\\n        </mat-form-field>\\n      </table>\\n      <mat-card-actions>\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n      </mat-card-actions>\\n    </form>\\n  </mat-card-content>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-employer-profile',\n  templateUrl: './create-employer-profile.component.html',\n  styleUrls: ['./create-employer-profile.component.css']\n})\nexport class CreateEmployerProfileComponent implements OnInit {\n\n  createEmpProfileForm: FormGroup;\n\n  sourceTypes = ['WGS 2.0 System', 'Diamond 950', 'Facets System',\n    'M204', 'QCare System', 'STAR System', 'WGS 1.3 System'];\n\n  constructor( private router: Router,\n               private formBuilder: FormBuilder ) { }\n\n  ngOnInit() {\n    this.createEmpProfileForm = this.formBuilder.group({\n      clientId: [ '', Validators.required ],\n      caseNumber: [ '' ],\n      sourceSystem: [ '', Validators.required ]\n    });\n  }\n\n  get clientIdCtrl() {\n    return this.createEmpProfileForm.get( 'clientId' );\n  }\n\n  get caseNumberCtrl() {\n    return this.createEmpProfileForm.get( 'caseNumber' );\n  }\n\n  get sourceSystemCtrl() {\n    return this.createEmpProfileForm.get( 'sourceSystem' );\n  }\n\n  onSubmit(): void {\n    if ( this.createEmpProfileForm.invalid ) {\n      console.log( 'into onSubmit 2' );\n      return;\n    }\n\n    console.log( 'into onSubmit 3' );\n  }\n}\n","module.exports = \"\"","module.exports = \"<mat-card class=\\\"eet-main-card\\\">\\n  <div *ngIf='zManuState.mainManuFlag'>\\n    <mat-toolbar color=\\\"accent\\\">\\n      <div *ngIf='zManuState.mainButtonOn'>\\n        <a mat-mat-raised-button  (click)=\\\"mainRouter()\\\" class='mat-button'>EET Main</a>\\n      </div>\\n      <div *ngIf='zManuState.cadocsButtonOn'>\\n        <a mat-mat-raised-button  (click)=\\\"cadocsRouter()\\\" class='mat-button'>View CA-Doc</a>\\n      </div>\\n      <div *ngIf='zManuState.searchButtonOn'>\\n        <a mat-mat-raised-button  (click)=\\\"searchRouter()\\\" class='mat-button'>Search Status</a>\\n      </div>\\n      <div *ngIf='zManuState.eeterrorsButtonOn'>\\n        <a mat-mat-raised-button  (click)=\\\"eeterrorsRouter()\\\" class='mat-button'>EET Errors</a>\\n      </div>\\n      <div *ngIf='zManuState.scheduleButtonOn'>\\n        <a mat-mat-raised-button  (click)=\\\"scheduleRouter()\\\" class='mat-button'>Job Schedule</a>\\n      </div>\\n      <div *ngIf='zManuState.mappingButtonOn'>\\n        <a mat-mat-raised-button  (click)=\\\"mappingRouter()\\\" class='mat-button'>Group Mapping</a>\\n      </div>\\n    </mat-toolbar>\\n  </div>\\n  <div fxLayout=\\\"column\\\" fxFlexAlign=\\\"stretch\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <app-view-error-message></app-view-error-message>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ManuState } from '../model/manu-state';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-eet-errors',\n  templateUrl: './eet-errors.component.html',\n  styleUrls: ['./eet-errors.component.css']\n})\nexport class EetErrorsComponent implements OnInit {\n\n  zManuState: ManuState;\n\n  constructor( private _router: Router ) {\n    this.zManuState =  {\n      mainManuFlag: true,\n      mainButtonOn: true,\n      cadocsButtonOn: false,\n      searchButtonOn: false,\n      eeterrorsButtonOn: false,\n      scheduleButtonOn: false,\n      mappingButtonOn: false\n    };\n\n  }\n\n  ngOnInit() {\n  }\n\n  mainRouter(): void {\n    this._router.navigate(['/main']);\n  }\n\n  cadocsRouter(): void {\n    this._router.navigate(['/cadocs']);\n  }\n\n  searchRouter(): void {\n    this._router.navigate( [ '/search' ] );\n  }\n\n  eeterrorsRouter(): void {\n    this._router.navigate( [ '/search' ] );\n  }\n\n  scheduleRouter(): void {\n    this._router.navigate( [ '/schedule' ] );\n  }\n\n  mappingRouter(): void {\n    this._router.navigate(['/mapping']);\n  }\n\n}\n","module.exports = \".eet-main-card {\\n  width: 80%;\\n  margin: 5% auto;\\n}\\n\\n.eet-main-card-old-01 {\\n  width: 1000px;\\n  margin: 10% auto;\\n}\\n\"","module.exports = \"<mat-card class=\\\"eet-main-card\\\">\\n<div *ngIf='zManuState.mainManuFlag'>\\n  <mat-toolbar color=\\\"accent\\\">\\n    <div *ngIf='zManuState.mainButtonOn'>\\n      <a mat-mat-raised-button  (click)=\\\"mainRouter()\\\" class='mat-button'>EET Main</a>\\n    </div>\\n    <div *ngIf='zManuState.cadocsButtonOn'>\\n      <a mat-mat-raised-button  (click)=\\\"cadocsRouter()\\\" class='mat-button'>View CA-Doc</a>\\n    </div>\\n    <div *ngIf='zManuState.searchButtonOn'>\\n      <a mat-mat-raised-button  (click)=\\\"searchRouter()\\\" class='mat-button'>Search Status</a>\\n    </div>\\n    <div *ngIf='zManuState.eeterrorsButtonOn'>\\n      <a mat-mat-raised-button  (click)=\\\"eeterrorsRouter()\\\" class='mat-button'>EET Errors</a>\\n    </div>\\n    <div *ngIf='zManuState.scheduleButtonOn'>\\n    <a mat-mat-raised-button  (click)=\\\"scheduleRouter()\\\" class='mat-button'>Job Schedule</a>\\n    </div>\\n    <div *ngIf='zManuState.mappingButtonOn'>\\n      <a mat-mat-raised-button  (click)=\\\"mappingRouter()\\\" class='mat-button'>Group Mapping</a>\\n    </div>\\n  </mat-toolbar>\\n</div>\\n<!-- <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center stretch\\\" fxFill> -->\\n<!-- bmk hold\\n<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n-->\\n<div fxLayout=\\\"column\\\" fxFlexAlign=\\\"stretch\\\">\\n  <mat-card>\\n    <mat-card-subtitle>\\n        <span><p>Welcome to the Electronic Eligibility Transfer (EET) options menu.<br>\\n          EET is an application that allows authorized users to manage membership eligibility via a browser interface.<br>\\n          From this menu, users can perform the following tasks based on access privileges.</p>\\n        </span>\\n    </mat-card-subtitle>\\n    <mat-card-content>\\n        <mat-tab-group>\\n          <mat-tab label=\\\"Create Employer EET Profile\\\">\\n            <app-create-employer-profile></app-create-employer-profile>\\n          </mat-tab>\\n          <mat-tab label=\\\"Update Employer EET Profile\\\">\\n            <app-update-employer-profile></app-update-employer-profile>\\n          </mat-tab>\\n          <mat-tab label=\\\"View Employer EET Profile\\\">\\n            <app-view-employer-profile></app-view-employer-profile>\\n          </mat-tab>\\n          <mat-tab label=\\\"Update Employer EET Contacts\\\">\\n            <app-update-employer-contacts></app-update-employer-contacts>\\n          </mat-tab>\\n        </mat-tab-group>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatTabGroup } from '@angular/material';\nimport { ManuState } from '../model/manu-state';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-eet-main',\n  templateUrl: './eet-main.component.html',\n  styleUrls: ['./eet-main.component.css']\n})\nexport class EetMainComponent implements OnInit {\n\n  zManuState: ManuState;\n\n  constructor( private _router: Router ) {\n    this.zManuState =  {\n      mainManuFlag: true,\n      mainButtonOn: false,\n      cadocsButtonOn: true,\n      searchButtonOn: true,\n      eeterrorsButtonOn: true,\n      scheduleButtonOn: true,\n      mappingButtonOn: true\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  mainRouter(): void {\n    this._router.navigate(['/main']);\n  }\n\n  cadocsRouter(): void {\n    this._router.navigate(['/cadocs']);\n  }\n\n  searchRouter(): void {\n    this._router.navigate( [ '/search' ] );\n  }\n\n  eeterrorsRouter(): void {\n    this._router.navigate( [ '/eeterrors' ] );\n  }\n\n  scheduleRouter(): void {\n    this._router.navigate( [ '/schedule' ] );\n  }\n\n  mappingRouter(): void {\n    this._router.navigate(['/mapping']);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n  <mat-card>\\n    <mat-card-header>\\n      <mat-card-title class=\\\"mat-display-2\\\">Group Mapping</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <p>Group Mapping display info.</p>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-group-mapping',\n  templateUrl: './group-mapping.component.html',\n  styleUrls: ['./group-mapping.component.css']\n})\nexport class GroupMappingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div fxLayout=\\\"column\\\"\\n     fxLayoutAlign=\\\"center stretch\\\"\\n     fxLayoutAlign.lg=\\\"center stretch\\\"\\n     class=\\\"mat-subheading-2\\\">Welcome to the Member Electronic Eligibility Transfer (EET)</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n  <mat-card>\\n    <mat-card-header>\\n      <mat-card-title class=\\\"mat-display-2\\\">Job Schedule</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <p>Job Schedule display info.</p>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-job-schedule',\n  templateUrl: './job-schedule.component.html',\n  styleUrls: ['./job-schedule.component.css']\n})\nexport class JobScheduleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".login-card {\\n  width: 400px;\\n  margin: 10% auto;\\n}\\n\\n.mat-card-title {\\n  font-size: 16px;\\n}\\n\\n.login-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.login-full-width {\\n  width: 100%;\\n}\\n\"","module.exports = \"<mat-card class=\\\"login-card\\\">\\n  <mat-card-header>\\n    <mat-card-title>Login</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <form class=\\\"login-form\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div *ngIf=\\\"invalidAuth\\\">\\n        <mat-error>Invalid Username or Password</mat-error>\\n      </div>\\n      <table class=\\\"login-full-width\\\" cellspacing=\\\"0\\\">\\n        <mat-form-field class=\\\"login-full-width\\\">\\n          <input matInput placeholder=\\\"Username\\\" formControlName=\\\"username\\\" >\\n          <mat-error\\n            *ngIf=\\\"usernameCtrl.hasError('required')\\\">Username is <strong>required</strong></mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"login-full-width\\\">\\n          <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" >\\n          <mat-error\\n            *ngIf=\\\"passwordCtrl.hasError('required')\\\">Password is <strong>required</strong></mat-error>\\n        </mat-form-field>\\n      </table>\\n      <mat-card-actions>\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Login</button>\\n      </mat-card-actions>\\n\\n    </form>\\n  </mat-card-content>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder,\n         FormGroup,\n         Validators\n       } from '@angular/forms';\nimport { LoginService } from '../service/login/login.service';\nimport { Login } from '../model/login';\nimport { LoginStatus } from '../model/login-status';\nimport { MeanuStateService } from '../service/state/meanu-state.service';\nimport { ManuState } from '../model/manu-state';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  displayManu: boolean;\n  loginForm: FormGroup;\n  loginStatus: LoginStatus;\n  invalidAuth: boolean;\n\n  constructor( private router: Router,\n               private loginService: LoginService,\n               private formBuilder: FormBuilder) {\n    this.displayManu = false;\n    this.invalidAuth = false;\n  }\n\n  ngOnInit() {\n    this.loginStatus = new LoginStatus( false, '');\n\n    this.loginForm = this.formBuilder.group({\n      username: [ '', Validators.required ],\n      password: [ '', Validators.required ]\n    });\n  }\n\n  get usernameCtrl() {\n    return this.loginForm.get( 'username' );\n  }\n\n  get passwordCtrl() {\n    return this.loginForm.get( 'password' );\n  }\n\n  onSubmit(): void {\n    if ( this.loginForm.invalid ) {\n      console.log('into onSubmit 2');\n      return;\n    }\n\n    console.log('into onSubmit 3');\n\n    const loginModel = new Login( this.loginForm.get('username').value,\n                                this.loginForm.get( 'password' ).value);\n\n//    const loginStatus: LoginStatus = this.loginService.login( loginModel );\n/*\n    this.loginService.login( loginModel )\n      .subscribe((status: LoginStatus) => {\n        this.loginStatus = new LoginStatus( false, '');\n        status;\n        if (status.code === 'FAILURE') {\n          this.alertStyle = 'alert alert-danger';\n        }\n      });\n*/\n\n    this.loginService.login( loginModel )\n      .subscribe( (res: LoginStatus) => { this.loginStatus = res; },\n        ( err: LoginStatus ) => { this.loginStatus = err; } );\n\n//\n//    console.log('into onSubmit 44444');\n//    if ( this.loginStatus.loginFlag === false ) {\n//      return;\n//    }\n\n    this.router.navigate(['main']);\n  }\n\n/*\n    if ( loginStatus.loginFlag === false ) {\n      this.invalidAuth = true;\n      // bmk we have work todo here\n      // this.loginForm.\n      return;\n    }\n    console.log(this.loginForm.value);\n\n    this.router.navigate(['main']);\n  }\n  */\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {\n  MatButtonModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatCardModule,\n  MatSnackBarModule,\n  MatInputModule,\n  MatTableModule,\n  MatMenuModule,\n  MatDialogModule,\n  MatTabsModule,\n  MatSelectModule\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatInputModule,\n    MatTableModule,\n    MatMenuModule,\n    FlexLayoutModule,\n    MatTabsModule,\n    MatSelectModule\n  ],\n  exports: [\n    CommonModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatInputModule,\n    MatTableModule,\n    MatMenuModule,\n    FlexLayoutModule,\n    MatTabsModule,\n    MatSelectModule\n  ],\n  declarations: []\n})\nexport class MaterialModule { }\n","export class LoginStatus {\n  constructor(\n    public loginFlag: boolean,\n    public message: string\n  ) { }\n}\n","export class Login {\n  constructor(\n    public usename: string,\n    public password: string\n  ) {  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  This page doesn't exist, Go back to <a routerLink=\\\"/home\\\">Login page</a>\\n</p>\\n<!--\\n<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n  <mat-card>\\n    <mat-card-header>\\n      <mat-card-title class=\\\"mat-display-2\\\">Job Schedule</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <p>Job Schedule display info.</p>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n-->\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n  <mat-card>\\n    <mat-card-header>\\n      <mat-card-title class=\\\"mat-display-2\\\">Search Status</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <p>search-status display info.</p>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-search-status',\n  templateUrl: './search-status.component.html',\n  styleUrls: ['./search-status.component.css']\n})\nexport class SearchStatusComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Login } from '../../model/login';\nimport { LoginStatus } from '../../model/login-status';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  constructor( private httpClient: HttpClient ) { }\n\n  login( loginModel: Login ): Observable<LoginStatus> {\n\n    const httpHeaders = new HttpHeaders()\n      .set( 'Content-Type', 'application/json' )\n      .set( 'Cache-Control', 'no-cache' );\n\n    const options = {\n      headers: httpHeaders\n    };\n\n    return this.httpClient.post<LoginStatus>('/login', loginModel, options );\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"tab-emp-profile-card\\\">\\n  <mat-card-header>\\n    <mat-card-title>Update Employer Contact Profile:&nbsp;</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <form class=\\\"tab-emp-profile-form\\\" [formGroup]=\\\"updateEmpContactProfileForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <table class=\\\"tab-emp-profile-full-width\\\" cellspacing=\\\"0\\\">\\n        <mat-form-field>\\n          <input type=\\\"text\\\" matInput placeholder=\\\"Client ID\\\" formControlName=\\\"clientId\\\" >\\n          <mat-error\\n            *ngIf=\\\"clientIdCtrl.hasError('required')\\\">Client ID is <strong>required</strong></mat-error>\\n        </mat-form-field>\\n        <div>\\n          <mat-form-field class=\\\"tab-emp-profile-full-width\\\">\\n            <input type=\\\"text\\\" matInput placeholder=\\\"Case Number\\\" formControlName=\\\"caseNumber\\\">\\n          </mat-form-field>\\n        </div>\\n        <mat-form-field class=\\\"tab-emp-profile-full-width\\\">\\n          <mat-select placeholder=\\\"Select Source Transaction\\\" formControlName=\\\"sourceSystem\\\">\\n            <mat-option *ngFor=\\\"let itemSource of sourceTypes\\\" [value]=\\\"itemSource\\\">\\n              {{itemSource}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error\\n            *ngIf=\\\"sourceSystemCtrl.hasError('required')\\\">A Source Transaction is <strong>required</strong></mat-error>\\n        </mat-form-field>\\n      </table>\\n      <mat-card-actions>\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n      </mat-card-actions>\\n    </form>\\n  </mat-card-content>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update-employer-contacts',\n  templateUrl: './update-employer-contacts.component.html',\n  styleUrls: ['./update-employer-contacts.component.css']\n})\nexport class UpdateEmployerContactsComponent implements OnInit {\n\n  updateEmpContactProfileForm: FormGroup;\n\n  sourceTypes = ['WGS 2.0 System', 'Diamond 950', 'Facets System',\n    'M204', 'QCare System', 'STAR System', 'WGS 1.3 System'];\n\n  constructor( private router: Router,\n               private formBuilder: FormBuilder ) { }\n\n  ngOnInit() {\n    this.updateEmpContactProfileForm = this.formBuilder.group({\n      clientId: [ '', Validators.required ],\n      caseNumber: [ '' ],\n      sourceSystem: [ '', Validators.required ]\n    });\n  }\n\n  get clientIdCtrl() {\n    return this.updateEmpContactProfileForm.get( 'clientId' );\n  }\n\n  get caseNumberCtrl() {\n    return this.updateEmpContactProfileForm.get( 'caseNumber' );\n  }\n\n  get sourceSystemCtrl() {\n    return this.updateEmpContactProfileForm.get( 'sourceSystem' );\n  }\n\n  onSubmit(): void {\n    if ( this.updateEmpContactProfileForm.invalid ) {\n      console.log( 'into onSubmit 2' );\n      return;\n    }\n\n    console.log( 'into onSubmit 3' );\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"tab-emp-profile-card\\\">\\n  <mat-card-header>\\n    <mat-card-title class=\\\"mat-h1\\\">Update Employer Profile information:&nbsp;</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <form class=\\\"tab-emp-profile-form\\\" [formGroup]=\\\"updateEmpProfileForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <table class=\\\"tab-emp-profile-full-width\\\" cellspacing=\\\"0\\\">\\n        <mat-form-field class=\\\"tab-emp-profile-full-width\\\">\\n          <input type=\\\"text\\\" matInput placeholder=\\\"Client ID\\\" formControlName=\\\"clientId\\\">\\n          <mat-error\\n            *ngIf=\\\"clientIdCtrl.hasError('required')\\\">Client ID is <strong>required</strong></mat-error>\\n        </mat-form-field>\\n        <div>\\n          <mat-form-field class=\\\"tab-emp-profile-full-width\\\">\\n            <input type=\\\"text\\\" matInput placeholder=\\\"Case Number\\\" formControlName=\\\"caseNumber\\\">\\n          </mat-form-field>\\n        </div>\\n        <mat-form-field class=\\\"tab-emp-profile-full-width\\\">\\n          <mat-select placeholder=\\\"Select Source Transaction\\\" formControlName=\\\"sourceSystem\\\">\\n            <mat-option *ngFor=\\\"let itemSource of sourceTypes\\\" [value]=\\\"itemSource\\\">\\n              {{itemSource}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error\\n            *ngIf=\\\"sourceSystemCtrl.hasError('required')\\\">A Source Transaction is <strong>required</strong>\\n          </mat-error>\\n\\n        </mat-form-field>\\n      </table>\\n      <mat-card-actions>\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n      </mat-card-actions>\\n    </form>\\n  </mat-card-content>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update-employer-profile',\n  templateUrl: './update-employer-profile.component.html',\n  styleUrls: ['./update-employer-profile.component.css']\n})\nexport class UpdateEmployerProfileComponent implements OnInit {\n\n  updateEmpProfileForm: FormGroup;\n\n  sourceTypes = ['WGS 2.0 System', 'Diamond 950', 'Facets System',\n    'M204', 'QCare System', 'STAR System', 'WGS 1.3 System'];\n\n  constructor( private router: Router,\n               private formBuilder: FormBuilder ) { }\n\n  ngOnInit() {\n    this.updateEmpProfileForm = this.formBuilder.group({\n      clientId: [ '', Validators.required ],\n      caseNumber: [ '' ],\n      sourceSystem: [ '', Validators.required ]\n    });\n  }\n\n  get clientIdCtrl() {\n    return this.updateEmpProfileForm.get( 'clientId' );\n  }\n\n  get caseNumberCtrl() {\n    return this.updateEmpProfileForm.get( 'caseNumber' );\n  }\n\n  get sourceSystemCtrl() {\n    return this.updateEmpProfileForm.get( 'sourceSystem' );\n  }\n\n  onSubmit(): void {\n    if ( this.updateEmpProfileForm.invalid ) {\n      console.log( 'into onSubmit 2' );\n      return;\n    }\n\n    console.log( 'into onSubmit 3' );\n  }\n}\n","module.exports = \"/*\\n.view-emp-profile-card {\\n  width: 900px;\\n  margin-top: 5%;\\n  margin-left: 20%;\\n}\\n\\n.view-emp-profile-form {\\n  min-width: 160px;\\n  max-width: 500px;\\n  width: 100%;\\n  margin-left: 25%;\\n}\\n\\n.view-emp-profile-full-width {\\n  width: 60%;\\n}\\n*/\\n\"","module.exports = \"<div class=\\\"tab-emp-profile-card\\\">\\n  <mat-card-header>\\n    <mat-card-title class=\\\"mat-h1\\\">Enter Employer Profile information to View:&nbsp;</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <form class=\\\"tab-emp-profile-form\\\" [formGroup]=\\\"viewEmpProfileForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <table class=\\\"tab-emp-profile-full-width\\\" cellspacing=\\\"0\\\">\\n        <mat-form-field class=\\\"tab-emp-profile-full-width\\\">\\n          <input type=\\\"text\\\" matInput placeholder=\\\"Client ID\\\" formControlName=\\\"clientId\\\">\\n          <mat-error\\n            *ngIf=\\\"clientIdCtrl.hasError('required')\\\">Client ID is <strong>required</strong></mat-error>\\n        </mat-form-field>\\n        <div>\\n          <mat-form-field class=\\\"tab-emp-profile-full-width\\\">\\n            <input type=\\\"text\\\" matInput placeholder=\\\"Case Number\\\" formControlName=\\\"caseNumber\\\">\\n          </mat-form-field>\\n        </div>\\n        <mat-form-field class=\\\"tab-emp-profile-full-width\\\">\\n          <mat-select placeholder=\\\"Select Source Transaction\\\" formControlName=\\\"sourceSystem\\\">\\n            <mat-option *ngFor=\\\"let itemSource of sourceTypes\\\" [value]=\\\"itemSource\\\">\\n              {{itemSource}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error\\n            *ngIf=\\\"sourceSystemCtrl.hasError('required')\\\">A Source Transaction is <strong>required</strong>\\n          </mat-error>\\n\\n        </mat-form-field>\\n      </table>\\n      <mat-card-actions>\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n      </mat-card-actions>\\n    </form>\\n  </mat-card-content>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder,\n         FormGroup,\n         Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-view-employer-profile',\n  templateUrl: './view-employer-profile.component.html',\n  styleUrls: ['./view-employer-profile.component.css']\n})\nexport class ViewEmployerProfileComponent implements OnInit {\n\n  viewEmpProfileForm: FormGroup;\n\n  sourceTypes = ['WGS 2.0 System', 'Diamond 950', 'Facets System',\n                 'M204', 'QCare System', 'STAR System', 'WGS 1.3 System'];\n\n  constructor( private router: Router,\n     private formBuilder: FormBuilder ) { }\n\n  ngOnInit() {\n    this.viewEmpProfileForm = this.formBuilder.group({\n      clientId: [ '', Validators.required ],\n      caseNumber: [ '' ],\n      sourceSystem: [ '', Validators.required ]\n    });\n  }\n\n  get clientIdCtrl() {\n    return this.viewEmpProfileForm.get( 'clientId' );\n  }\n\n  get caseNumberCtrl() {\n    return this.viewEmpProfileForm.get( 'caseNumber' );\n  }\n\n  get sourceSystemCtrl() {\n    return this.viewEmpProfileForm.get( 'sourceSystem' );\n  }\n\n  onSubmit(): void {\n    if ( this.viewEmpProfileForm.invalid ) {\n      console.log( 'into onSubmit 2' );\n      return;\n    }\n\n    console.log( 'into onSubmit 3' );\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"tab-emp-profile-card\\\">\\n  <mat-card-header>\\n    <mat-card-title class=\\\"mat-h1\\\">View Employer EET Error Messages:&nbsp;</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <form class=\\\"tab-emp-profile-form\\\" [formGroup]=\\\"viewErrorMessageForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <table class=\\\"tab-emp-profile-full-width\\\" cellspacing=\\\"0\\\">\\n        <mat-form-field class=\\\"tab-emp-profile-full-width\\\">\\n          <input type=\\\"text\\\" matInput placeholder=\\\"Client ID\\\" formControlName=\\\"clientId\\\">\\n          <mat-error\\n            *ngIf=\\\"clientIdCtrl.hasError('required')\\\">Client ID is <strong>required</strong></mat-error>\\n        </mat-form-field>\\n        <div>\\n          <mat-form-field class=\\\"tab-emp-profile-full-width\\\">\\n            <mat-select placeholder=\\\"Select Status Type\\\" formControlName=\\\"statusType\\\">\\n              <mat-option *ngFor=\\\"let itemStatus of statusTypes\\\" [value]=\\\"itemStatus\\\">\\n                {{itemStatus}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error\\n              *ngIf=\\\"sourceSystemCtrl.hasError('required')\\\">A Source Transaction is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <mat-form-field class=\\\"tab-emp-profile-full-width\\\">\\n          <mat-select placeholder=\\\"Select Source Transaction\\\" formControlName=\\\"sourceSystem\\\">\\n            <mat-option *ngFor=\\\"let itemSource of sourceTypes\\\" [value]=\\\"itemSource\\\">\\n              {{itemSource}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error\\n            *ngIf=\\\"sourceSystemCtrl.hasError('required')\\\">A Source Transaction is <strong>required</strong>\\n          </mat-error>\\n\\n        </mat-form-field>\\n      </table>\\n      <mat-card-actions>\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n      </mat-card-actions>\\n    </form>\\n  </mat-card-content>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-view-error-message',\n  templateUrl: './view-error-message.component.html',\n  styleUrls: ['./view-error-message.component.css']\n})\nexport class ViewErrorMessageComponent implements OnInit {\n\n  viewErrorMessageForm: FormGroup;\n\n  statusTypes = ['Open', 'Complete', 'Bypass'];\n\n  sourceTypes = ['WGS 2.0 System', 'Diamond 950', 'Facets System',\n    'M204', 'QCare System', 'STAR System', 'WGS 1.3 System'];\n\n  constructor( private router: Router,\n               private formBuilder: FormBuilder ) { }\n\n  ngOnInit() {\n    this.viewErrorMessageForm = this.formBuilder.group({\n      clientId: [ '', Validators.required ],\n      statusType: [ '', Validators.required ],\n      sourceSystem: [ '', Validators.required ]\n    });\n  }\n\n  get clientIdCtrl() {\n    return this.viewErrorMessageForm.get( 'clientId' );\n  }\n\n  get statusTypeCtrl() {\n    return this.viewErrorMessageForm.get( 'statusType' );\n  }\n\n  get sourceSystemCtrl() {\n    return this.viewErrorMessageForm.get( 'sourceSystem' );\n  }\n\n  onSubmit(): void {\n    if ( this.viewErrorMessageForm.invalid ) {\n      console.log( 'into onSubmit 2' );\n      return;\n    }\n\n    console.log( 'into onSubmit 3' );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}